(window.webpackJsonp=window.webpackJsonp||[]).push([[129],{740:function(e,r,t){"use strict";t.r(r);var o=t(11),n=Object(o.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[t("img",{attrs:{src:"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/v1639490464/fnwgemhn7zfenyjq6jg8.png",alt:""}})]),e._v(" "),t("h2",{attrs:{id:"_2021-年最佳-node-周刊"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2021-年最佳-node-周刊"}},[e._v("#")]),e._v(" 2021 年最佳 Node 周刊")]),e._v(" "),t("p",[e._v("这是今年的最后一期（我们将在 1 月 13 日返回，因为我们要休息两周）所以我们回顾一下我们在 2021 年共享的一些最受欢迎的链接。一定会有一些当时没有引起你的注意:-)\n__"),t("br"),e._v(" "),t("em",[e._v("Peter Cooper, your editor")])]),e._v(" "),t("p",[e._v("1: "),t("a",{attrs:{href:"https://nodeweekly.com/link/117820/web",title:"news.ycombinator.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("问 HN：为什么 Node.js 如此 “讨厌” ？"),t("OutboundLink")],1),e._v(" — 好的，这个显然引起了你的注意。我们在 10 月份 "),t("a",{attrs:{href:"https://nodeweekly.com/link/117821/web",target:"_blank",rel:"noopener noreferrer"}},[e._v("分享"),t("OutboundLink")],1),e._v(" 了这个 Hacker News 讨论，这里有很多评论可以看 — 有些是公平的，有些不是。我们当时说过，最好在这样的事情上保持哲学，并记住 C++ 的创造者所说的：“只有两种语言：人们抱怨的语言和没人使用的语言。”")]),e._v(" "),t("p",[e._v("2: "),t("RouterLink",{attrs:{to:"/node_weekly/419/nodejs_framework_selection_guide.html"}},[e._v("Node.js 框架选择指南")]),e._v(" — Hapi? Koa? Express? 别着急。与许多文章不同，这篇来自 9 月下旬的文章没有为你提供任何具体的框架建议，而是为你提供在选择框架时应该考虑的内容。")],1),e._v(" "),t("p",[t("img",{attrs:{src:"https://copm.s3.amazonaws.com/ef86f60f.png",alt:""}})]),e._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://nodeweekly.com/link/117823/web",target:"_blank",rel:"noopener noreferrer"}},[e._v("不复杂的认证"),t("OutboundLink")],1),e._v(" — 这是构建身份验证、SSO、多用户访问控制的更简单的方法。适用于 Node、React、Vue 等的优秀文档和示例。")])]),e._v(" "),t("p",[e._v("3: "),t("a",{attrs:{href:"https://nodeweekly.com/link/117824/web",title:"yonigoldberg.medium.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用 BASIC 原则编写干净的 JavaScript 测试"),t("OutboundLink")],1),e._v(" — 介绍应用五个关键原则来缩短、清理和简化基于 JavaScript 和 Node.js 的测试套件。")]),e._v(" "),t("p",[e._v("4: "),t("a",{attrs:{href:"https://nodeweekly.com/link/117825/web",title:"www.youtube.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("NestJS 的 100 秒呈现"),t("OutboundLink")],1),e._v(" — 这段视频于 8 月分享，介绍了 "),t("a",{attrs:{href:"https://nodeweekly.com/link/117826/web",target:"_blank",rel:"noopener noreferrer"}},[e._v("Nest"),t("OutboundLink")],1),e._v(" 的高级概念，它是一个用于构建可扩展 Node.js 应用程序的框架，它提供了更多功能（超出了仅使用 Express 或 Fastify 之类的东西可能会得到的东西）。全部在大约两分钟内呈现。")]),e._v(" "),t("p",[e._v("5: "),t("a",{attrs:{href:"https://nodeweekly.com/link/117827/web",title:"www.honeybadger.io",target:"_blank",rel:"noopener noreferrer"}},[e._v("Node 中的错误处理综合指南"),t("OutboundLink")],1),e._v(" — Node 提供了很多方法来捕捉错误和抛出异常 — 上个月的这篇文章略读了您可能想要考虑的一些主要领域。")]),e._v(" "),t("p",[e._v("6: "),t("a",{attrs:{href:"https://nodeweekly.com/link/117828/web",title:"github.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("40 多个 Node.js 集成测试最佳实践"),t("OutboundLink")],1),e._v(" — 这个流行的存储库深入研究了各种用于创建良好组件/集成测试的快速模式和实践。还有一个演示应用程序和使用 Jest、Mocha、Express、Fastify 和 Nest.js 的示例。")]),e._v(" "),t("p",[e._v("7: "),t("a",{attrs:{href:"https://nodeweekly.com/link/117830/web",title:"css-tricks.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("将 Google Drive 用作 CMS"),t("OutboundLink")],1),e._v(" — 7 月的这篇文章提供了一些不同的东西 — 探索使用 Google Drive 存储内容，以通过其 API 和 Node.js 呈现到网站。")]),e._v(" "),t("p",[e._v("8: "),t("a",{attrs:{href:"https://nodeweekly.com/link/117831/web",title:"github.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tasuku (タスク): Node 的最小任务运行器"),t("OutboundLink")],1),e._v(" — 日语中的 “任务”，该工具提供了一种将流程分解为小任务的简洁方式，这些小任务可以以正确的顺序运行，并且在终端中优雅地显示进度。")]),e._v(" "),t("p",[e._v("9: "),t("a",{attrs:{href:"https://nodeweekly.com/link/117832/web",title:"nodejs.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("Node v16.9.0 (Current) 发布"),t("OutboundLink")],1),e._v(" — 从 9 月初开始，这个版本的重要补充是 "),t("a",{attrs:{href:"https://nodeweekly.com/link/117833/web",target:"_blank",rel:"noopener noreferrer"}},[e._v("Corepack"),t("OutboundLink")],1),e._v("，这是一个实验性工具，用于直接在 Node 发行版本身内管理包管理器。")]),e._v(" "),t("p",[e._v("10: "),t("a",{attrs:{href:"https://nodeweekly.com/link/117834/web",title:"blog.appsignal.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("Node 登录最佳实践"),t("OutboundLink")],1),e._v(" — 一系列关于日志记录要点的提示 — 例如避免记录敏感信息、编写描述性消息以及正确使用日志记录级别。")]),e._v(" "),t("p",[e._v("11: "),t("a",{attrs:{href:"https://nodeweekly.com/link/117836/web",title:"blog.bitsrc.io",target:"_blank",rel:"noopener noreferrer"}},[e._v("每个开发人员都应该避免的常见 “npm” 错误"),t("OutboundLink")],1),e._v(" — 关于如何在管理依赖项、发布包等时避免常见错误的建议，这里有一些值得遵循的提示。")]),e._v(" "),t("p",[e._v("12: "),t("a",{attrs:{href:"https://nodeweekly.com/link/117837/web",title:"blog.risingstack.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("Node.js 的垃圾回收机制"),t("OutboundLink")],1),e._v(" — 垃圾回收和内存管理如何在 Node.js 中工作，本文附有插图和代码示例。这篇文章于 9 月更新。")]),e._v(" "),t("p",[e._v("13: "),t("a",{attrs:{href:"https://nodeweekly.com/link/117838/web",title:"blog.bitsrc.io",target:"_blank",rel:"noopener noreferrer"}},[e._v("Deno 好么？看看 “Node Killer” 吧"),t("OutboundLink")],1),e._v(" — 这不是一篇特别深刻的文章，但它对 Node Weekly 读者的吸引力提醒我们，可以说，偶尔看看 “围栏的另一边” 发生了什么是值得的。当然，Deno 在 2021 年继续保持良好增长。")]),e._v(" "),t("p",[e._v("14: "),t("a",{attrs:{href:"https://nodeweekly.com/link/117840/web",title:"yieldcode.blog",target:"_blank",rel:"noopener noreferrer"}},[e._v("用 Rust 来增强 Node"),t("OutboundLink")],1),e._v(" — 10 月份的这篇文章探讨了您是否可以将 Node 代码与用 Rust 编写的东西集成？答案是肯定的，这篇文章是对所涉及概念的基本介绍。")]),e._v(" "),t("p",[e._v("15: "),t("a",{attrs:{href:"https://nodeweekly.com/link/117841/web",title:"yarin.dev",target:"_blank",rel:"noopener noreferrer"}},[e._v("在具有工作线程的 Node 中运行 CPU 密集型任务"),t("OutboundLink")],1),e._v(" — 通过使用 "),t("a",{attrs:{href:"https://nodeweekly.com/link/117842/web",target:"_blank",rel:"noopener noreferrer"}},[e._v("工作线程"),t("OutboundLink")],1),e._v(" 来超越 Node 天生的单线程特性的全面而实用的介绍。")]),e._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" "),t("strong",[e._v("总结")])]),e._v(" "),t("p",[e._v("我们将在圣诞节和新年休假几周，所以 "),t("strong",[e._v("我们将在 2022 年 1 月 13 日与您见面。")]),e._v(" 非常感谢您阅读今年的 Node Weekly。来自 Cooperpress 的所有人，向您致以节日的问候，无论您庆祝（或不庆祝！）😄\n__"),t("br"),e._v(" "),t("em",[e._v("Peter Cooper, your editor")])]),e._v(" "),t("hr"),e._v(" "),t("blockquote",[t("ul",[t("li",[e._v("译文出自："),t("a",{attrs:{href:"https://github.com/FEDarling/weekly-tracker",target:"_blank",rel:"noopener noreferrer"}},[e._v("weekly-tracker"),t("OutboundLink")],1),e._v(" 项目，期待你的加入！")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://nodeweekly.com/link/117819/web",target:"_blank",rel:"noopener noreferrer"}},[e._v("查看原文"),t("OutboundLink")],1),e._v("对比阅读")]),e._v(" "),t("li",[e._v("发现错误？"),t("a",{attrs:{href:"https://github.com/FEDarling/weekly-tracker/blob/main/weeklys/node_weekly/419/README.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("提交 PR"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("译者："),t("a",{attrs:{href:"https://github.com/daodaolee",target:"_blank",rel:"noopener noreferrer"}},[e._v("daodaolee"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("校对者："),t("a",{attrs:{href:"https://github.com/daodaolee",target:"_blank",rel:"noopener noreferrer"}},[e._v("daodaolee"),t("OutboundLink")],1)])])])])}),[],!1,null,null,null);r.default=n.exports}}]);