(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{702:function(a,e,r){"use strict";r.r(e);var s=r(11),n=Object(s.a)({},(function(){var a=this,e=a.$createElement,r=a._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("p",[r("code",[a._v("Array.map()")]),a._v("是我们日常开发过程中经常使用到的一个映射函数，它需要一个映射函数作为入参并随之根据入参生成一个新的函数。")]),a._v(" "),r("p",[a._v("在 es2019 之后，出现了一个新的方法——"),r("code",[a._v("Array.flatMap")]),a._v("。它完全可以替代"),r("code",[a._v("Array.map")]),a._v("，因为它不仅能完成映射，还可以在生成新数组时删除或者添加你需要的元素。但是使用时要注意兼容性，下面附上在"),r("a",{attrs:{href:"https://caniuse.com/?search=Array.flatmap",target:"_blank",rel:"noopener noreferrer"}},[a._v("CanIUse"),r("OutboundLink")],1),a._v("上，"),r("code",[a._v("Array.flatMap")]),a._v("的兼容情况。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4728f70ab9c44ed6aa77b2ab1513fabd~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),a._v(" "),r("h3",{attrs:{id:"灵活的映射方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#灵活的映射方法"}},[a._v("#")]),a._v(" 灵活的映射方法")]),a._v(" "),r("p",[a._v("假如我们有一个数组"),r("code",[a._v("const number = [0, 3, 6]")]),a._v(",我们如何将每一个元素都 *2，并返回一个新的数组呢？")]),a._v(" "),r("p",[a._v("使用"),r("code",[a._v("Array.map()")]),a._v("方法")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("const numbers = [0, 3, 6];\nconst doubled = numbers.map(n => n * 2);\nconsole.log(doubled); // logs [0, 6, 12]\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br")])]),r("p",[r("code",[a._v("numbers.map(number => 2 * number)")]),a._v("会生成一个新的数组，并根据映射函数其中的每一个元素都会 * 2。")]),a._v(" "),r("p",[a._v("在我们转换映射的时候，如果元素的情况是 1 对 1 的话，就是说原数组和新数组的长度是一样。那么我们使用"),r("code",[a._v("Array.map")]),a._v("就很方便了。")]),a._v(" "),r("p",[a._v("但是如果我们在生成新数组时，要控制去除某些元素时，例如我们要跳过 0 这个数字。")]),a._v(" "),r("p",[a._v("此时，只是使用 array.map 就无法实现了，因为它生成的新数组和原数组的长度是相同的。但是可以同时使用"),r("code",[a._v("array.map()")]),a._v(" 和 "),r("code",[a._v("array.filter()")]),a._v("来实现。")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("const numbers = [0, 3, 6];\nconst doubled = numbers\n  .filter(n => n !== 0)\n  .map(n => n * 2);\nconsole.log(doubled); // logs [6, 12]\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br")])]),r("p",[a._v("此时生成的数组就满足了我们的要求，不包含 0 且每一个元素都*2 了。")]),a._v(" "),r("p",[a._v("我觉得使用"),r("code",[a._v("Array.map")]),a._v("和"),r("code",[a._v("array.filter")]),a._v("结合的方式来完成这个功能有点麻烦，有没有更简短的方式来实现呢？")]),a._v(" "),r("p",[a._v("答案是肯定的。自从有了"),r("code",[a._v("array.flatMap")]),a._v("的方法，我们就可以通过只调用这一个方法就能实现这些功能。")]),a._v(" "),r("p",[a._v("下面使用下"),r("code",[a._v("array.flatMap")]),a._v("方法来实现元素 * 2 并且过滤 0 的功能。")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("const numbers = [0, 3, 6];\nconst doubled = numbers.flatMap(number => {\n  return number === 0 ? [] : [2 * number];\n});\nconsole.log(doubled); // logs [6, 12]\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br")])]),r("p",[a._v("通过"),r("code",[a._v("array.flatMap")]),a._v("方法我们可以生成一个新的数组，并且在这个数组生成的过程中，完成我们过滤某些元素的功能。")]),a._v(" "),r("p",[a._v("让我们来看看"),r("code",[a._v("Array.flatMap")]),a._v("是如何实现的?")]),a._v(" "),r("h3",{attrs:{id:"array-flatmap"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#array-flatmap"}},[a._v("#")]),a._v(" Array.flatMap()")]),a._v(" "),r("p",[r("code",[a._v("array.flatMap")]),a._v("方法必须接受一个回调函数作为入参才可以返回一个新的数组。")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("const mappedArray = array.flatMap((item, index, origArray) => {\n  // ...\n  return [value1, value2, ..., valueN];\n}[, thisArg]);\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br")])]),r("p",[a._v("flatMap 会依次遍历每一个函数，并调用回调函数。在回调函数中，我们可以接收到 3 个参数：item(当前元素)，index(当前元素的下表)以及 origArray(原始数组)。会先生成一个二元数组然后通过 flat 进行扁平化处理，就能得到我们想要的结果。")]),a._v(" "),r("p",[a._v("另外，我们可以在 flatMap 中传入第二个参数(可选项)。这个参数会作为回调函数的 this 的值。")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("const arrays = [2, 4, 6];\nconst flatten = arrays.flatMap(\n  function(item) {\n    console.log(this); // [Number:123]\n    return item;\n  },\n  123\n);\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br")])]),r("p",[a._v("值得注意的是，第二个参数如果不是数组或者对象，将会被转为"),r("code",[a._v("[类型：值]")]),a._v("格式的关联数组。还要注意当你想使用第二个参数时，要注意不能使用箭头函数哦！")]),a._v(" "),r("p",[a._v("上面我们说过"),r("code",[a._v("flatMap")]),a._v("会做扁平化处理，所以下面代码的功能也是可以实现的。")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("const arrays = [[2, 4], [6]];\nconst flatten = arrays.flatMap(item => item);\nconsole.log(flatten); // logs [2, 4, 6]\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br")])]),r("p",[a._v("原数组的值为 [[2, 4], [6]] 经过扁平化处理后，就转变为[2,4,6]了。")]),a._v(" "),r("p",[a._v("扁平化只是"),r("code",[a._v("Array.flatMap")]),a._v("的一个简单的功能，他还可以做其他的事。通过控制返回值，你可以实现更多的操作：")]),a._v(" "),r("ul",[r("li",[a._v("通过返回一个空数组[]从新数组中移除该项")]),a._v(" "),r("li",[a._v("通过返回具有一个新值[ newValue ]的数组来修改原数组对应元素")]),a._v(" "),r("li",[a._v("通过返回具有多个值的数组来添加新项: [ newValue1，newValue2，... ]。")])]),a._v(" "),r("p",[a._v("在我们上一节的内容中，我们可以通过 flatMap 来创建一个新的数组，并且将原数组中的每一个元素都*2 以及删除值为 0 的元素。")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("const numbers = [0, 3, 6];\nconst doubled = numbers.flatMap(number => {\n  return number === 0 ? [] : [2 * number];\n});\nconsole.log(doubled); // logs [6, 12]\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br")])]),r("p",[a._v("让我们详细地了解一下上面的例子是如何工作的。")]),a._v(" "),r("p",[a._v("如果当前元素为 0 时，我们将返回一个空数组[],当前元素不为 0 时，则返回[当前元素"),r("em",[a._v("2]。当 flatMap 进行扁平化处理的时候，[]就相当于未提供任何值，[当前元素")]),a._v("2]则正常处理到新数组中。")]),a._v(" "),r("p",[a._v("同理：我们还可以通过"),r("code",[a._v("Array.flatMap")]),a._v("来给增加数组中的元素数量。")]),a._v(" "),r("p",[a._v("例如，下面的代码通过增加两倍和三倍的数字生成一个新的数组:")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("const numbers = [1, 4];\nconst trippled = numbers.flatMap(number => {\n  return [number, 2 * number, 3 * number];\n});\nconsole.log(trippled);\n// logs [1, 2, 3, 4, 8, 12]\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br")])]),r("h3",{attrs:{id:"总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),r("p",[a._v("如果我们希望通过一个数组生成一个新的数组，并且还想要控制向新数组中添加新的元素，那么你可以使用"),r("code",[a._v("array.flatMap")]),a._v("来实现这个功能。")]),a._v(" "),r("p",[r("code",[a._v("array.flatMap")]),a._v("方法的回调函数有 3 个参数，分别为当前元素，下标以及原数组。从回调函数返回的数组将是被扁平化的数组，生成的元素也会被插入到该数组中。")]),a._v(" "),r("p",[a._v("请注意，如果你只想将单个项目映射到单个新值，那么请尽量使用标准 array.map ()。")]),a._v(" "),r("hr"),a._v(" "),r("blockquote",[r("ul",[r("li",[a._v("译文出自："),r("a",{attrs:{href:"https://github.com/FEDarling/weekly-tracker",target:"_blank",rel:"noopener noreferrer"}},[a._v("weekly-tracker"),r("OutboundLink")],1),a._v(" 项目，期待你的加入！")]),a._v(" "),r("li",[r("a",{attrs:{href:"https://dmitripavlutin.com/javascript-array-flatmap/",target:"_blank",rel:"noopener noreferrer"}},[a._v("查看原文"),r("OutboundLink")],1),a._v("对比阅读")]),a._v(" "),r("li",[a._v("发现错误？"),r("a",{attrs:{href:"https://github.com/FEDarling/weekly-tracker/blob/main/weeklys/javascript_weekly/571/flatMap.md",target:"_blank",rel:"noopener noreferrer"}},[a._v("提交 PR"),r("OutboundLink")],1)]),a._v(" "),r("li",[a._v("译者："),r("a",{attrs:{href:"https://github.com/chressYu",target:"_blank",rel:"noopener noreferrer"}},[a._v("HongyuYU"),r("OutboundLink")],1)]),a._v(" "),r("li",[a._v("校对者："),r("a",{attrs:{href:"https://github.com/LilyChenlin",target:"_blank",rel:"noopener noreferrer"}},[a._v("LilyChenlin"),r("OutboundLink")],1)])])])])}),[],!1,null,null,null);e.default=n.exports}}]);